"""
Django settings for test_obj project.

Generated by 'django-admin startproject' using Django 2.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, os.path.join(BASE_DIR, 'APPS'))  # 把app集中到APPS中
sys.path.insert(0, os.path.join(BASE_DIR, 'extra_apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'v7t=5hl^qx+z6z&a-*w5+9hqlkksw+0m4(zz5e7i5%1a-n%io&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.conf',
    # 三方软件
    'rest_framework',
    'rest_framework_jwt',
    'corsheaders',
    'crispy_forms',
    'xadmin',
    # 自定义
    'backend.apps.BackendConfig',
    'personnel.apps.PersonnelConfig',        # 人员管理
    'engineering.apps.EngineeringConfig',    # 工程中心
    'rbac.apps.RbacConfig',                  # 前台菜单权限
    'product.apps.ProductConfig',            # 产品管理
    'APPS.crm.apps.CrmConfig',               # 销售管理
    'APPS.mlr.apps.MlrConfig',               # 报告系统
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'test_obj.urls'
CORS_ORIGIN_ALLOW_ALL = True  # allow all site request

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'test_obj.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# CACHES = {
#     "default": {
#         "BACKEND": "django_redis.cache.RedisCache",
#         "LOCATION": "redis://127.0.0.1:6379/1",
#         "OPTIONS": {
#             "CLIENT_CLASS": "django_redis.client.DefaultClient",
#         }
#     }
# }
# SESSION_ENGINE = "django.contrib.sessions.backends.cache"
# SESSION_CACHE_ALIAS = "default"

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'windit',
#         'HOST': '10.100.0.151',
#         'PORT': 33060,
#         'USER': 'root',
#         'PASSWORD':'test',
#         'OPTIONS': {
#             'init_command': 'SET sql_mode="STRICT_TRANS_TABLES"',
#             'charset': 'utf8mb4'
#         }
#
#     }
# }

# 开发环境
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'windit',
#         'HOST': 'db',
#         'PORT': 3306,
#         'USER': 'root',
#         'PASSWORD':'test',
#         'OPTIONS': {
#              'init_command': 'SET sql_mode="STRICT_TRANS_TABLES"',
#              'charset': 'utf8mb4'
#          }
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

# 数据库里的时间格式，true为UTC时间，
# USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/api/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

MEDIA_URL = '/api/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# 企业微信使用
WX_TOKEN = ''
# WX_TOKEN = 'DoMTMrz9cQwUQM8zVyanvw_Syk2EZNuGepLun-Hz5NFFb0f5Srkwh4V2306DSjosa24vjduqyCxJIakP27vgqHp-7RIp6YKiti4t-j_DAMxCaa9aE2i49Y9bklmDJjylm-jMOA8_8keGMf8JRjbAwtHa4izD-I_gIgdraphW7oDJUBwBv0Vq41f7QMgl3DUal-DyljLhxtNt6nbwcpJJDA'
WX_JSAPITICKET = {
    'token': '',
    'ticket': ''
}

# 配置自定义user表
AUTH_USER_MODEL = 'personnel.User'

REST_FRAMEWORK = {
    # 认证类配置
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'utils.authentications.JWTAuthentication'
    ],
    # 权限类配置
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
        'rest_framework.permissions.IsAuthenticated',
    ],
}

import datetime
JWT_AUTH = {
    # payload => token
    'JWT_ENCODE_HANDLER':
        'rest_framework_jwt.utils.jwt_encode_handler',
    # token => payload
    'JWT_DECODE_HANDLER':
        'rest_framework_jwt.utils.jwt_decode_handler',
    # user => payload
    'JWT_PAYLOAD_HANDLER':
        'rest_framework_jwt.utils.jwt_payload_handler',
    # token过期时间
    'JWT_EXPIRATION_DELTA': datetime.timedelta(hours=8),
    # token刷新的过期时间
    'JWT_REFRESH_EXPIRATION_DELTA': datetime.timedelta(days=1),
    # 反爬小措施前缀
    'JWT_AUTH_HEADER_PPREFIX': 'JWT'
}
