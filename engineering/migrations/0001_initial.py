# Generated by Django 2.2.6 on 2020-07-24 09:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Collector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=1)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=64, verbose_name='采集器名称')),
                ('model', models.CharField(max_length=64, verbose_name='版本')),
                ('aisle', models.IntegerField(verbose_name='通道数量')),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='采集器照片')),
                ('memo', models.TextField(verbose_name='备注')),
            ],
            options={
                'verbose_name': '采集器',
                'verbose_name_plural': '采集器',
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=1)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=64, verbose_name='风机名称')),
                ('status', models.SmallIntegerField(default=1, verbose_name='风机运行状态')),
                ('memo', models.TextField(verbose_name='备注')),
            ],
            options={
                'verbose_name': '项目风机',
                'verbose_name_plural': '项目风机',
            },
        ),
        migrations.CreateModel(
            name='FacilityCollector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=1)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('sn', models.CharField(max_length=64, verbose_name='采集器编号')),
                ('types', models.SmallIntegerField(default=1, verbose_name='采集类型')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP地址')),
                ('net_mask', models.GenericIPAddressField(blank=True, null=True, verbose_name='子网掩码')),
                ('gate_way', models.GenericIPAddressField(blank=True, null=True, verbose_name='网关')),
                ('model', models.CharField(max_length=64, verbose_name='目前版本')),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collector', to='engineering.Facility')),
            ],
            options={
                'verbose_name': '风机采集器',
                'verbose_name_plural': '风机采集器',
            },
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=1)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=64, verbose_name='机器型号')),
                ('memo', models.TextField(verbose_name='备注')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=1)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=64, verbose_name='项目名称')),
                ('address', models.CharField(max_length=64, verbose_name='项目地址')),
                ('sn', models.CharField(max_length=64, verbose_name='内部项目编号')),
                ('status', models.SmallIntegerField(default=1, verbose_name='项目状态')),
                ('image', models.ImageField(upload_to='', verbose_name='默认图片')),
                ('entrance_time', models.DateTimeField(verbose_name='入场时间')),
                ('finish_time', models.DateTimeField(verbose_name='完成时间')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='备注说明')),
            ],
            options={
                'verbose_name': '项目',
                'verbose_name_plural': '项目',
            },
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=1)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=64, verbose_name='传感器名称')),
                ('manufacturer', models.CharField(blank=True, max_length=64, null=True, verbose_name='传感器厂商')),
                ('bias_voltage', models.CharField(blank=True, max_length=32, null=True, verbose_name='偏置电压')),
                ('memo', models.TextField(verbose_name='备注')),
            ],
            options={
                'verbose_name': '传感器',
                'verbose_name_plural': '传感器',
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=1)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=1)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('server_type', models.SmallIntegerField(choices=[(0, '塔式服务器'), (1, '柜式服务器'), (2, 'PC电脑')], default=0, verbose_name='服务器类型')),
                ('brand', models.SmallIntegerField(default=0, verbose_name='品牌')),
                ('model', models.CharField(max_length=64, verbose_name='服务器型号')),
                ('ram_count', models.SmallIntegerField(default=1, verbose_name='内存数量')),
                ('disk_raid', models.SmallIntegerField(choices=[(1, 'RAID 0'), (2, 'RAID 1'), (3, 'RAID 5')], default=1, verbose_name='阵列类型')),
                ('disk_count', models.SmallIntegerField(default=2, verbose_name='硬盘数量')),
                ('os_type', models.SmallIntegerField(choices=[(1, 'Windows'), (2, 'linux')], default=1, verbose_name='系统类型')),
                ('os_release', models.SmallIntegerField(default=1, verbose_name='系统版本')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='server', to='engineering.Project')),
            ],
            options={
                'verbose_name': '风机服务器',
                'verbose_name_plural': '风机服务器',
            },
        ),
        migrations.CreateModel(
            name='RAM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=1)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('capacity', models.IntegerField(default=8, verbose_name='内存大小')),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ram', to='engineering.Server')),
            ],
            options={
                'verbose_name': '内存',
                'verbose_name_plural': '内存',
            },
        ),
        migrations.CreateModel(
            name='NIC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=1)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(blank=True, max_length=64, null=True, verbose_name='网卡名称')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP地址')),
                ('net_mask', models.GenericIPAddressField(blank=True, null=True, verbose_name='子网掩码')),
                ('gate_way', models.GenericIPAddressField(blank=True, null=True, verbose_name='网关')),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nic', to='engineering.Server')),
            ],
            options={
                'verbose_name': '网卡',
                'verbose_name_plural': '网卡',
            },
        ),
        migrations.CreateModel(
            name='FacilitySensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=1)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('sn', models.CharField(max_length=64, verbose_name='采集器编号')),
                ('number', models.SmallIntegerField(default=1, verbose_name='通道编号')),
                ('install_site', models.CharField(blank=True, max_length=64, null=True, verbose_name='安装位置')),
                ('collector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Sensor', to='engineering.FacilityCollector')),
                ('sensor_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='engineering.Sensor')),
            ],
            options={
                'verbose_name': '风机传感器',
                'verbose_name_plural': '风机传感器',
            },
        ),
        migrations.AddField(
            model_name='facility',
            name='machine',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='engineering.Machine'),
        ),
        migrations.AddField(
            model_name='facility',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facility', to='engineering.Project'),
        ),
        migrations.CreateModel(
            name='EventLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=1)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('event_type', models.SmallIntegerField(default=1, verbose_name='事件类型')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='事件时间')),
                ('detail', models.TextField(verbose_name='事件详情')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='log', to='engineering.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Disk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=1)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('disk_type', models.SmallIntegerField(choices=[(1, 'SATA'), (2, 'SAS')], default=1, verbose_name='硬盘类型')),
                ('disk_capacity', models.FloatField(verbose_name='硬盘容量(GB)')),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disk', to='engineering.Server')),
            ],
            options={
                'verbose_name': '硬盘',
                'verbose_name_plural': '硬盘',
            },
        ),
        migrations.CreateModel(
            name='CPU',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=1)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('cpu_model', models.CharField(blank=True, max_length=128, null=True)),
                ('cpu_core_count', models.PositiveSmallIntegerField(default=4, verbose_name='CPU核心数')),
                ('cpu_count', models.PositiveSmallIntegerField(default=1, verbose_name='CPU物理个数')),
                ('server', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cpu', to='engineering.Server')),
            ],
            options={
                'verbose_name': 'CPU',
                'verbose_name_plural': 'CPU',
            },
        ),
    ]
